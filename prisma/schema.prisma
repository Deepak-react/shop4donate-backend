generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model adminside_user {
  id                                                               Int                  @id @default(autoincrement())
  employee_id                                                      String               @unique @db.VarChar(20)
  name                                                             String               @db.VarChar(100)
  email                                                            String               @unique @db.VarChar(100)
  password                                                         String               @db.VarChar(255)
  role                                                             Int?
  profile_image                                                    String?
  bg_image                                                         String?
  created_at                                                       DateTime?            @default(now()) @db.Timestamp(6)
  updated_at                                                       DateTime?            @db.Timestamp(6)
  is_active                                                        Boolean?             @default(true)
  roles                                                            roles?               @relation(fields: [role], references: [id], onUpdate: NoAction)
  affiliate_products_affiliate_products_created_byToadminside_user affiliate_products[] @relation("affiliate_products_created_byToadminside_user")
  affiliate_products_affiliate_products_updated_byToadminside_user affiliate_products[] @relation("affiliate_products_updated_byToadminside_user")
  categories_categories_created_byToadminside_user                 categories[]         @relation("categories_created_byToadminside_user")
  categories_categories_updated_byToadminside_user                 categories[]         @relation("categories_updated_byToadminside_user")
  email_content_email_content_created_byToadminside_user           email_content[]      @relation("email_content_created_byToadminside_user")
  email_content_email_content_updated_byToadminside_user           email_content[]      @relation("email_content_updated_byToadminside_user")
  smtp_settings_smtp_settings_created_byToadminside_user           smtp_settings[]      @relation("smtp_settings_created_byToadminside_user")
  smtp_settings_smtp_settings_updated_byToadminside_user           smtp_settings[]      @relation("smtp_settings_updated_byToadminside_user")
}

model affiliate_products {
  id                                                           Int             @id @default(autoincrement())
  affiliate_name                                               String          @unique @db.VarChar(150)
  logo                                                         String?         @db.VarChar(255)
  affiliate_link                                               String
  total_revenue                                                Int?
  category                                                     Int?
  total_clicks                                                 Int?
  created_at                                                   DateTime?       @default(now()) @db.Timestamp(6)
  created_by                                                   Int?
  updated_at                                                   DateTime?       @db.Timestamp(6)
  updated_by                                                   Int?
  is_active                                                    Boolean?        @default(true)
  categories                                                   categories?     @relation(fields: [category], references: [id], onDelete: NoAction, onUpdate: NoAction)
  adminside_user_affiliate_products_created_byToadminside_user adminside_user? @relation("affiliate_products_created_byToadminside_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  adminside_user_affiliate_products_updated_byToadminside_user adminside_user? @relation("affiliate_products_updated_byToadminside_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model categories {
  id                                                   Int                  @id @default(autoincrement())
  name                                                 String               @db.VarChar(100)
  created_at                                           DateTime?            @default(now()) @db.Timestamp(6)
  created_by                                           Int?
  updated_at                                           DateTime?            @db.Timestamp(6)
  updated_by                                           Int?
  is_active                                            Boolean?             @default(true)
  affiliate_products                                   affiliate_products[]
  adminside_user_categories_created_byToadminside_user adminside_user?      @relation("categories_created_byToadminside_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  adminside_user_categories_updated_byToadminside_user adminside_user?      @relation("categories_updated_byToadminside_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model email_content {
  id                                                      Int             @id @default(autoincrement())
  email_title                                             String?         @db.VarChar(150)
  email_subject                                           String?         @db.VarChar(200)
  email_body                                              String?
  created_at                                              DateTime?       @default(now()) @db.Timestamp(6)
  created_by                                              Int?
  updated_at                                              DateTime?       @db.Timestamp(6)
  updated_by                                              Int?
  is_active                                               Boolean?        @default(true)
  adminside_user_email_content_created_byToadminside_user adminside_user? @relation("email_content_created_byToadminside_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  adminside_user_email_content_updated_byToadminside_user adminside_user? @relation("email_content_updated_byToadminside_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model roles {
  id             Int              @id @default(autoincrement())
  role           String           @db.VarChar(50)
  created_at     DateTime?        @default(now()) @db.Timestamp(6)
  updated_at     DateTime?        @db.Timestamp(6)
  is_active      Boolean?         @default(true)
  adminside_user adminside_user[]
}

model smtp_settings {
  id                                                      Int             @id @default(autoincrement())
  smtp_host                                               String?         @db.VarChar(100)
  smtp_port                                               Int?
  smtp_server                                             String?         @db.VarChar(100)
  smtp_name                                               String?         @db.VarChar(100)
  smtp_email                                              String?         @db.VarChar(100)
  smtp_password                                           String?         @db.VarChar(100)
  created_at                                              DateTime?       @default(now()) @db.Timestamp(6)
  created_by                                              Int?
  updated_at                                              DateTime?       @db.Timestamp(6)
  updated_by                                              Int?
  is_active                                               Boolean?        @default(true)
  adminside_user_smtp_settings_created_byToadminside_user adminside_user? @relation("smtp_settings_created_byToadminside_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  adminside_user_smtp_settings_updated_byToadminside_user adminside_user? @relation("smtp_settings_updated_byToadminside_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id             Int       @id @default(autoincrement())
  user_name      String?   @db.VarChar(100)
  user_email     String?   @unique @db.VarChar(100)
  password       String?   @db.VarChar(100)
  contact_number String?   @db.VarChar(20)
  profile_image  String?
  bg_image       String?
  created_at     DateTime? @default(now()) @db.Timestamp(6)
  updated_at     DateTime? @db.Timestamp(6)
  is_active      Boolean?  @default(true)
}
